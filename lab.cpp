#include <stdio.h> // Подключение библиотеки для ввода-вывода
#include <math.h> // Подключение библиотеки для математических операций

// Функция для вычисления факториала
double factorial(int n) { // Вариант вычисления факториала с помощью итерационного цикла
    double result = 1; // Инициализация переменной result, равной 1
    for (int i = 1; i <= n; i++) { // Цикл, в котором переменная i принимает значения от 1 до n включительно
        result *= i; // Умножение текущего значения result на i
    }
    return result; // Возврат результата - двойного факториала числа n
}
/*double factorial(int n) {
    if (n == 0)
        return 1;
    else
        return n * factorial(n - 1); // Вариант вычисления факториала с помощью рекурсии
}*/

// Функция для вычисления суммы ряда
double sum_series(double x, int n) {
    double sum = 0; // Инициализация суммы
    for (int i = 0; i <= n; i++) {
        sum += pow(-1, i) * pow(x, 2 * i) / factorial(2 * i); // Вычисление i-го члена ряда и добавление его к сумме
    }
    return sum; // Возвращение вычисленной суммы
}

// Функция для вычисления контрольной функции
double control_function(double x) {
    return cos(x); // Возвращение значения контрольной функции
}

// Главная функция
int main() {
    double x_values[9];// Инициализация массива значений x
    for (int i = 0; i < 9; i++) {
        x_values[i] = 0.1 * (i + 1); // Заполнение массива значениями x
    }

    int n_values[9] = { 1, 2, 3, 4, 5, 6, 7, 8, 9}; // Инициализация массива значений n

    for (int i = 0; i < 9; i++) {  // Вычисление суммы ряда и контрольной функции для каждой пары x и n
        for (int j = 0; j < 9; j++) {
            double sum = sum_series(x_values[i], n_values[j]); // Вычисление суммы ряда
            double control = control_function(x_values[i]); // Вычисление значения контрольной функции
            printf("x = %.1f, n = %d, sum = %.6f, control = %.6f\n", x_values[i], n_values[j], sum, control); // Вывод результатов
        }
    }

    return 0; // Возвращение кода завершения программы
}
// 6 9